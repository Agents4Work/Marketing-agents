import React, { useState, useEffect } from 'react';
import { useParams, useLocation } from 'wouter';
import { motion } from 'framer-motion';
import SidebarOptimized from '@/components/SidebarOptimized';
import { 
  ArrowLeft, 
  Star, 
  TrendingUp, 
  Users, 
  Check, 
  PlusCircle, 
  ChevronRight,
  MessagesSquare,
  LineChart,
  Zap,
  BookOpen,
  Layers,
  Target,
  Sparkles,
  FileText,
  Clock,
  Calendar,
  History,
  Tag,
  RefreshCw
} from 'lucide-react';
import { 
  Card, 
  CardContent, 
  CardDescription, 
  CardFooter, 
  CardHeader, 
  CardTitle
} from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";
import { Progress } from "@/components/ui/progress";
import { useToast } from '@/hooks/use-toast';
import { Agent, ExtendedAgent, AgentSkill, normalizeSkillToString } from '@/types/marketplace';
import { agents } from '@/data/agents';

// Type guard function to check if a skill is an object with name and level properties
const isSkillObject = (skill: AgentSkill): skill is { name: string; level: number } => {
  return typeof skill === 'object' && skill !== null && 'name' in skill && 'level' in skill;
};

export default function AgentDetailPage() {
  const params = useParams<{ id: string }>();
  const [, setLocation] = useLocation();
  const { toast } = useToast();
  const [activeTab, setActiveTab] = useState('overview');
  const [selectedAgent, setSelectedAgent] = useState<ExtendedAgent | null>(null);
  
  // Find the agent with the matching ID from the URL params
  useEffect(() => {
    const agentId = params.id;
    if (agentId) {
      console.log("Looking for agent with ID:", agentId);
      // Try to find the exact agent by ID
      const foundAgent = agents.find(agent => agent.id === agentId);
      if (foundAgent) {
        console.log("Found matching agent:", foundAgent.name);
        setSelectedAgent(foundAgent);
      } else {
        // If no matching agent is found, redirect back to marketplace
        console.log("No agent found with ID:", agentId);
        setLocation('/agent-marketplace');
        toast({
          title: "Agent Not Found",
          description: `No agent found with ID: ${agentId}`,
          variant: "destructive",
        });
      }
    } else {
      // If no ID provided, redirect to marketplace
      console.log("No agent ID provided, redirecting to marketplace");
      setLocation('/agent-marketplace');
    }
  }, [params.id, setLocation]);
  
  // Animation variants for staggered animations
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };
  
  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 }
  };
  
  // Function to handle adding agent to team
  const handleAddToTeam = () => {
    if (!selectedAgent) return;
    
    toast({
      title: "Agent Added to Team",
      description: `${selectedAgent.name} has been added to your team.`,
      variant: "default",
    });
  };
  
  // Function to handle trying a demo
  const handleTryDemo = () => {
    if (!selectedAgent) return;
    
    setLocation(`/agent-marketplace/${selectedAgent.id}/demo`);
  };
  
  // Function to handle quick integration
  const handleQuickIntegration = () => {
    if (!selectedAgent) return;
    
    setLocation('/lego-workflow');
    
    // We would also want to set some state or local storage to indicate
    // that this agent should be pre-added to the workflow
    localStorage.setItem('preselected_agent', selectedAgent.id);
    
    toast({
      title: "Redirecting to Workflow Builder",
      description: `${selectedAgent.name} will be added to your new workflow.`,
      variant: "default",
    });
  };
  
  // Skill dot visualization
  const SkillDot = ({ level }: { level: number }) => {
    const backgroundColor = 
      level >= 95 ? 'bg-green-500' :
      level >= 85 ? 'bg-emerald-500' :
      level >= 75 ? 'bg-teal-500' :
      level >= 65 ? 'bg-blue-500' :
      'bg-gray-400';
    
    return <div className={`w-1.5 h-1.5 rounded-full ${backgroundColor}`}></div>;
  };
  
  // Show loading state if no agent is selected yet
  if (!selectedAgent) {
    return (
      <div className="flex h-screen overflow-hidden bg-gray-50 dark:bg-gray-900">
        <SidebarOptimized />
        <div className="flex-1 flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary mx-auto mb-4"></div>
            <p className="text-lg">Loading agent details...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="flex h-screen overflow-hidden bg-gray-50 dark:bg-gray-900">
      <SidebarOptimized />
      
      <div className="flex-1 flex flex-col overflow-hidden">
        <main className="flex-1 overflow-auto py-6 px-4 sm:px-6 md:px-8">
          <div className="max-w-7xl mx-auto">
            {/* Breadcrumb Navigation */}
            <div className="mb-6">
              <Button
                variant="ghost"
                className="flex items-center text-gray-600 hover:text-gray-900"
                onClick={() => setLocation('/agent-marketplace')}
              >
                <ArrowLeft className="w-4 h-4 mr-1" />
                Back to Marketplace
              </Button>
            </div>
            
            {/* Agent Header Section */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
            >
              <Card className="overflow-hidden border-3 border-black shadow-[8px_8px_0px_0px_rgba(0,0,0,0.8)] mb-8">
                <div className={`h-3 bg-gradient-to-r ${selectedAgent.secondaryColor}`}></div>
                
                <CardContent className="pt-6 pb-6">
                  <div className="flex flex-col md:flex-row justify-between">
                    <div className="flex items-start space-x-4 mb-4 md:mb-0">
                      <div className={`p-6 rounded-2xl ${selectedAgent.primaryColor} text-white border-3 border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)]`}>
                        <span className="text-4xl">{selectedAgent.avatar}</span>
                      </div>
                      
                      <div>
                        <div className="flex items-center space-x-2 mb-1">
                          <h1 className="text-3xl font-bold">{selectedAgent.name}</h1>
                          <TooltipProvider>
                            <Tooltip>
                              <TooltipTrigger>
                                <Badge variant="outline" className="font-semibold border-2 border-black px-2">
                                  {selectedAgent.level}
                                </Badge>
                              </TooltipTrigger>
                              <TooltipContent>
                                <p>Advanced AI capabilities</p>
                              </TooltipContent>
                            </Tooltip>
                          </TooltipProvider>
                        </div>
                        
                        <div className="text-gray-600 mb-2 max-w-2xl">
                          {selectedAgent.description}
                        </div>
                        
                        <div className="flex flex-wrap items-center">
                          <div className="flex items-center mr-4 mb-2">
                            <Star className="w-5 h-5 text-yellow-500 fill-yellow-500 mr-1" />
                            <span className="font-semibold text-sm">{selectedAgent.rating}</span>
                            <span className="text-gray-500 text-sm ml-1">({selectedAgent.reviews} reviews)</span>
                          </div>
                          
                          <div className="flex items-center mr-4 mb-2">
                            <Badge variant="outline" className="font-medium border-2 border-black">
                              {selectedAgent.category}
                            </Badge>
                          </div>
                          
                          <div className="flex items-center mb-2">
                            <TooltipProvider>
                              <Tooltip>
                                <TooltipTrigger>
                                  <div className="flex items-center text-green-600">
                                    <Users className="w-4 h-4 mr-1" />
                                    <span className="font-medium text-sm">{selectedAgent.compatibility}% Team Compatibility</span>
                                  </div>
                                </TooltipTrigger>
                                <TooltipContent>
                                  <p>Works exceptionally well with other agents</p>
                                </TooltipContent>
                              </Tooltip>
                            </TooltipProvider>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div className="flex flex-col gap-2 min-w-[200px]">
                      <Button
                        className="border-2 border-black bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] transform hover:-translate-y-0.5 hover:-translate-x-0.5 transition-all text-white"
                        onClick={handleAddToTeam}
                      >
                        <div className="flex items-center">
                          <PlusCircle className="w-4 h-4 mr-1.5" />
                          <span>Add to Team</span>
                        </div>
                      </Button>
                      
                      <Button
                        variant="outline"
                        className="border-2 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] transform hover:-translate-y-0.5 hover:-translate-x-0.5 transition-all bg-white"
                        onClick={handleTryDemo}
                      >
                        <div className="flex items-center">
                          <Sparkles className="w-4 h-4 mr-1.5" />
                          <span>Try Demo</span>
                        </div>
                      </Button>
                      
                      <Button
                        variant="outline"
                        className="border-2 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] transform hover:-translate-y-0.5 hover:-translate-x-0.5 transition-all bg-white"
                        onClick={handleQuickIntegration}
                      >
                        <div className="flex items-center">
                          <Zap className="w-4 h-4 mr-1.5" />
                          <span>Quick Integration</span>
                        </div>
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
            
            {/* Tabs Navigation */}
            <Tabs
              value={activeTab}
              onValueChange={setActiveTab}
              className="mb-8"
            >
              <TabsList className="border-3 border-black p-1 rounded-lg shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] mb-6">
                <TabsTrigger value="overview" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <BookOpen className="w-4 h-4 mr-1.5" />
                    Overview
                  </div>
                </TabsTrigger>
                <TabsTrigger value="samples" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <FileText className="w-4 h-4 mr-1.5" />
                    Sample Outputs
                  </div>
                </TabsTrigger>
                <TabsTrigger value="team" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <Users className="w-4 h-4 mr-1.5" />
                    Team Integration
                  </div>
                </TabsTrigger>
                <TabsTrigger value="reviews" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <MessagesSquare className="w-4 h-4 mr-1.5" />
                    Reviews
                  </div>
                </TabsTrigger>
                <TabsTrigger value="performance" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <LineChart className="w-4 h-4 mr-1.5" />
                    Performance
                  </div>
                </TabsTrigger>
                <TabsTrigger value="versions" className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-600 data-[state=active]:text-white data-[state=active]:border-2 data-[state=active]:border-black rounded-md data-[state=active]:shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                  <div className="flex items-center">
                    <History className="w-4 h-4 mr-1.5" />
                    Version History
                  </div>
                </TabsTrigger>
              </TabsList>
              
              {/* Overview Tab Content */}
              <TabsContent value="overview">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                >
                  <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    {/* Skills Card */}
                    <motion.div variants={itemVariants} className="lg:col-span-2">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Zap className="w-5 h-5 mr-2 text-yellow-500" />
                            Agent Skills & Capabilities
                          </CardTitle>
                          <CardDescription>
                            Expertise levels across different copywriting disciplines
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-4">
                            {selectedAgent.skills.map(skill => {
                              const skillName = isSkillObject(skill) ? skill.name : skill;
                              const skillLevel = isSkillObject(skill) ? skill.level : 85; // Default level if not provided
                              
                              return (
                                <div key={skillName} className="space-y-1">
                                  <div className="flex justify-between items-center">
                                    <div className="font-medium">{skillName}</div>
                                    <div className="text-sm">{skillLevel}%</div>
                                  </div>
                                  <div className="w-full bg-gray-200 rounded-full h-1.5 dark:bg-gray-700 relative">
                                    <div className="absolute inset-0 flex">
                                      {Array.from({ length: 20 }).map((_, i) => (
                                        <div key={i} className="flex-1 px-0.5 py-1">
                                          <SkillDot level={skillLevel - (i * 5)} />
                                        </div>
                                      ))}
                                    </div>
                                    <div 
                                      className="bg-gradient-to-r from-blue-500 to-indigo-600 h-1.5 rounded-full" 
                                      style={{ width: `${skillLevel}%` }}
                                    ></div>
                                  </div>
                                </div>
                              );
                            })}
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Key Benefits Card */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Check className="w-5 h-5 mr-2 text-green-500" />
                            Key Benefits
                          </CardTitle>
                          <CardDescription>
                            Why this agent stands out from others
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <ul className="space-y-3">
                            {selectedAgent.benefits.map((benefit, index) => (
                              <li key={index} className="flex items-start">
                                <div className="p-1 rounded-full bg-green-100 text-green-600 mr-2 mt-0.5 flex-shrink-0">
                                  <Check className="w-3 h-3" />
                                </div>
                                <span className="text-sm">{benefit}</span>
                              </li>
                            ))}
                          </ul>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Use Cases Card */}
                    <motion.div variants={itemVariants} className="lg:col-span-3">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Target className="w-5 h-5 mr-2 text-red-500" />
                            Popular Use Cases
                          </CardTitle>
                          <CardDescription>
                            Common applications where this agent excels
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                            {selectedAgent.useCases.map((useCase, index) => (
                              <Card key={index} className="border-2 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)]">
                                <CardHeader className="pb-2">
                                  <div className="w-10 h-10 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center mb-2">
                                    {React.createElement(useCase.icon, { className: "h-5 w-5" })}
                                  </div>
                                  <CardTitle className="text-lg">{useCase.title}</CardTitle>
                                </CardHeader>
                                <CardContent>
                                  <p className="text-sm text-gray-600">{useCase.description}</p>
                                </CardContent>
                              </Card>
                            ))}
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                  </div>
                </motion.div>
              </TabsContent>
              
              {/* Sample Outputs Tab Content */}
              <TabsContent value="samples">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                  className="space-y-6"
                >
                  {selectedAgent.sampleOutputs.map((sample, index) => (
                    <motion.div key={index} variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <FileText className="w-5 h-5 mr-2 text-blue-500" />
                            {sample.title}
                          </CardTitle>
                          <CardDescription>
                            Sample output for {sample.type} content
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 font-mono text-sm whitespace-pre-wrap">
                            {sample.content}
                          </div>
                        </CardContent>
                        
                        <CardFooter>
                          <div className="flex justify-end w-full">
                            <Button variant="outline" className="border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                              Copy Sample
                            </Button>
                          </div>
                        </CardFooter>
                      </Card>
                    </motion.div>
                  ))}
                </motion.div>
              </TabsContent>
              
              {/* Team Integration Tab Content */}
              <TabsContent value="team">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                >
                  <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    {/* Compatible Agents */}
                    <motion.div variants={itemVariants} className="lg:col-span-2">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Users className="w-5 h-5 mr-2 text-indigo-500" />
                            Best Team Combinations
                          </CardTitle>
                          <CardDescription>
                            Agents that work exceptionally well with {selectedAgent.name}
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-4">
                            {selectedAgent.compatibleAgents.map((agent, index) => (
                              <div key={index} className="flex items-center justify-between p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer">
                                <div className="flex items-center">
                                  <div className={`w-10 h-10 rounded-full ${agent.color} text-white flex items-center justify-center border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]`}>
                                    <span>{agent.avatar}</span>
                                  </div>
                                  <div className="ml-3">
                                    <div className="font-medium">{agent.name}</div>
                                    <div className="text-sm text-gray-500">Compatibility: {agent.compatibility}%</div>
                                  </div>
                                </div>
                                <Button size="sm" variant="outline" className="border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                                  View Agent
                                </Button>
                              </div>
                            ))}
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Quick Team Builder */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Zap className="w-5 h-5 mr-2 text-yellow-500" />
                            Quick Team Builder
                          </CardTitle>
                          <CardDescription>
                            Create an optimized team with this agent
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-4">
                            <div className="p-4 border border-blue-200 bg-blue-50 rounded-lg">
                              <h4 className="font-semibold text-blue-700 mb-2">Content Dream Team</h4>
                              <div className="flex -space-x-2 mb-3">
                                <div className={`w-8 h-8 rounded-full ${selectedAgent.primaryColor} text-white flex items-center justify-center border-2 border-white shadow-md`}>
                                  {selectedAgent.avatar}
                                </div>
                                <div className="w-8 h-8 rounded-full bg-green-600 text-white flex items-center justify-center border-2 border-white shadow-md">
                                  🔍
                                </div>
                                <div className="w-8 h-8 rounded-full bg-pink-600 text-white flex items-center justify-center border-2 border-white shadow-md">
                                  📱
                                </div>
                              </div>
                              <p className="text-sm text-blue-600 mb-3">3 agents optimized for content creation and distribution</p>
                              <Button className="w-full border-2 border-black bg-gradient-to-r from-blue-500 to-indigo-600 shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                                Build This Team
                              </Button>
                            </div>
                            
                            <div className="p-4 border border-green-200 bg-green-50 rounded-lg">
                              <h4 className="font-semibold text-green-700 mb-2">SEO Power Squad</h4>
                              <div className="flex -space-x-2 mb-3">
                                <div className={`w-8 h-8 rounded-full ${selectedAgent.primaryColor} text-white flex items-center justify-center border-2 border-white shadow-md`}>
                                  {selectedAgent.avatar}
                                </div>
                                <div className="w-8 h-8 rounded-full bg-green-600 text-white flex items-center justify-center border-2 border-white shadow-md">
                                  🔍
                                </div>
                                <div className="w-8 h-8 rounded-full bg-amber-600 text-white flex items-center justify-center border-2 border-white shadow-md">
                                  📊
                                </div>
                              </div>
                              <p className="text-sm text-green-600 mb-3">3 agents focused on SEO-optimized content</p>
                              <Button className="w-full border-2 border-black bg-gradient-to-r from-green-500 to-emerald-600 shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                                Build This Team
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Workflow Visualization */}
                    <motion.div variants={itemVariants} className="lg:col-span-3">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <TrendingUp className="w-5 h-5 mr-2 text-purple-500" />
                            Workflow Integration
                          </CardTitle>
                          <CardDescription>
                            How this agent works within your marketing workflows
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent className="pb-6">
                          <div className="flex flex-col items-center">
                            <div className="w-full max-w-4xl p-4 bg-gradient-to-r from-indigo-50 to-blue-50 rounded-xl border border-blue-100">
                              <div className="flex flex-wrap justify-center items-center gap-8 py-4">
                                {/* Input Node */}
                                <div className="flex flex-col items-center">
                                  <div className="w-16 h-16 rounded-full bg-purple-100 border-2 border-purple-300 flex items-center justify-center mb-2">
                                    <FileText className="w-8 h-8 text-purple-500" />
                                  </div>
                                  <div className="text-center">
                                    <div className="font-semibold text-sm">Request</div>
                                    <div className="text-xs text-gray-500">Marketing Brief</div>
                                  </div>
                                </div>
                                
                                <div className="w-16 h-0.5 bg-gray-300"></div>
                                
                                {/* Strategy Agent */}
                                <div className="flex flex-col items-center">
                                  <div className="w-16 h-16 rounded-full bg-cyan-100 border-2 border-cyan-300 flex items-center justify-center mb-2">
                                    <div className="text-2xl">💡</div>
                                  </div>
                                  <div className="text-center">
                                    <div className="font-semibold text-sm">Strategy Agent</div>
                                    <div className="text-xs text-gray-500">Plans Approach</div>
                                  </div>
                                </div>
                                
                                <div className="w-16 h-0.5 bg-gray-300"></div>
                                
                                {/* Current Agent */}
                                <div className="flex flex-col items-center">
                                  <div className={`w-20 h-20 rounded-full ${selectedAgent.primaryColor} border-3 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] flex items-center justify-center mb-2`}>
                                    <div className="text-3xl text-white">{selectedAgent.avatar}</div>
                                  </div>
                                  <div className="text-center">
                                    <div className="font-semibold">{selectedAgent.name}</div>
                                    <div className="text-xs text-gray-600">Creates Content</div>
                                  </div>
                                </div>
                                
                                <div className="w-16 h-0.5 bg-gray-300"></div>
                                
                                {/* SEO Agent */}
                                <div className="flex flex-col items-center">
                                  <div className="w-16 h-16 rounded-full bg-green-100 border-2 border-green-300 flex items-center justify-center mb-2">
                                    <div className="text-2xl">🔍</div>
                                  </div>
                                  <div className="text-center">
                                    <div className="font-semibold text-sm">SEO Agent</div>
                                    <div className="text-xs text-gray-500">Optimizes</div>
                                  </div>
                                </div>
                                
                                <div className="w-16 h-0.5 bg-gray-300"></div>
                                
                                {/* Output Node */}
                                <div className="flex flex-col items-center">
                                  <div className="w-16 h-16 rounded-full bg-emerald-100 border-2 border-emerald-300 flex items-center justify-center mb-2">
                                    <Check className="w-8 h-8 text-emerald-500" />
                                  </div>
                                  <div className="text-center">
                                    <div className="font-semibold text-sm">Results</div>
                                    <div className="text-xs text-gray-500">Finalized Content</div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            
                            <div className="mt-6">
                              <Button
                                className="border-2 border-black bg-gradient-to-r from-blue-500 to-indigo-600 shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)]"
                                onClick={handleQuickIntegration}
                              >
                                <div className="flex items-center">
                                  <Sparkles className="w-4 h-4 mr-1.5" />
                                  <span>Build Custom Workflow</span>
                                </div>
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                  </div>
                </motion.div>
              </TabsContent>
              
              {/* Reviews Tab Content */}
              <TabsContent value="reviews">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                >
                  <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    {/* Reviews Summary */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <Star className="w-5 h-5 mr-2 text-yellow-500 fill-yellow-500" />
                            Ratings Overview
                          </CardTitle>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="flex flex-col items-center">
                            <div className="text-5xl font-bold mb-2">{selectedAgent.rating}</div>
                            <div className="flex mb-4">
                              {[1, 2, 3, 4, 5].map(star => (
                                <Star 
                                  key={star} 
                                  className={`w-6 h-6 ${star <= Math.round(selectedAgent.rating) ? 'text-yellow-500 fill-yellow-500' : 'text-gray-300'}`} 
                                />
                              ))}
                            </div>
                            <div className="text-sm text-gray-500 mb-6">
                              Based on {selectedAgent.reviews} reviews
                            </div>
                            
                            <div className="w-full space-y-2">
                              {[5, 4, 3, 2, 1].map(stars => (
                                <div key={stars} className="flex items-center">
                                  <div className="text-sm text-gray-600 w-10">{stars} ★</div>
                                  <div className="flex-1 mx-2">
                                    <div className="h-2 w-full bg-gray-200 rounded-full">
                                      <div 
                                        className="h-2 bg-yellow-500 rounded-full" 
                                        style={{ 
                                          width: `${stars === 5 ? 82 : 
                                                  stars === 4 ? 12 : 
                                                  stars === 3 ? 4 : 
                                                  stars === 2 ? 1 : 0.5}%` 
                                        }}
                                      ></div>
                                    </div>
                                  </div>
                                  <div className="text-sm text-gray-500 w-10">
                                    {stars === 5 ? '82%' : 
                                     stars === 4 ? '12%' : 
                                     stars === 3 ? '4%' : 
                                     stars === 2 ? '1%' : '<1%'}
                                  </div>
                                </div>
                              ))}
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Testimonials */}
                    <motion.div variants={itemVariants} className="lg:col-span-2">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <MessagesSquare className="w-5 h-5 mr-2 text-indigo-500" />
                            User Testimonials
                          </CardTitle>
                          <CardDescription>
                            What users are saying about this agent
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-5">
                            {selectedAgent.testimonials.map((testimonial: { avatar: string; name: string; company: string; rating: number; text: string }, index: number) => (
                              <div key={index} className="p-4 border border-gray-200 rounded-lg bg-gray-50">
                                <div className="flex justify-between mb-2">
                                  <div className="flex items-center">
                                    <div className="w-10 h-10 rounded-full bg-indigo-100 text-indigo-600 flex items-center justify-center mr-3">
                                      <span>{testimonial.avatar}</span>
                                    </div>
                                    <div>
                                      <div className="font-semibold">{testimonial.name}</div>
                                      <div className="text-xs text-gray-500">{testimonial.company}</div>
                                    </div>
                                  </div>
                                  <div className="flex">
                                    {[1, 2, 3, 4, 5].map(star => (
                                      <Star 
                                        key={star} 
                                        className={`w-4 h-4 ${star <= testimonial.rating ? 'text-yellow-500 fill-yellow-500' : 'text-gray-300'}`} 
                                      />
                                    ))}
                                  </div>
                                </div>
                                <p className="text-sm text-gray-700">
                                  "{testimonial.text}"
                                </p>
                              </div>
                            ))}
                          </div>
                          
                          <div className="flex justify-center mt-6">
                            <Button 
                              variant="outline" 
                              className="border-2 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)]"
                            >
                              View All Reviews
                            </Button>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                  </div>
                </motion.div>
              </TabsContent>
              
              {/* Performance Tab Content */}
              <TabsContent value="performance">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                >
                  <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    {/* Performance Metrics */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <LineChart className="w-5 h-5 mr-2 text-blue-500" />
                            Performance Metrics
                          </CardTitle>
                          <CardDescription>
                            Key indicators of agent effectiveness
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-4">
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Conversion Rate Improvement</div>
                                <div className="text-green-600 font-semibold">+{selectedAgent.performance.conversionRate}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.conversionRate} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Average improvement in landing page conversion rates</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Engagement Score</div>
                                <div className="text-green-600 font-semibold">+{selectedAgent.performance.engagementScore}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.engagementScore} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Average increase in content engagement metrics</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Output Quality</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.outputQuality}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.outputQuality} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Quality rating based on human evaluators</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Creativity Score</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.creativity}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.creativity} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Originality and creative approach rating</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Consistency Rating</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.consistency}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.consistency} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Consistency across multiple content pieces</div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Benchmark Comparison */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <TrendingUp className="w-5 h-5 mr-2 text-green-500" />
                            Benchmarking
                          </CardTitle>
                          <CardDescription>
                            How this agent compares to alternatives
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-6">
                            <div className="p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100">
                              <div className="font-semibold text-blue-800 mb-1">Human vs AI Copywriter Comparison</div>
                              <div className="space-y-3 mt-3">
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Speed</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: 1x</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 50x faster</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Cost Efficiency</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: 1x</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 85% less</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Consistency</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: Variable</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 96% consistent</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Creativity</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge className="bg-gradient-to-r from-purple-500 to-pink-600">Human: Still leads</Badge>
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">AI: 95% as creative</Badge>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                  </div>
                </motion.div>
              </TabsContent>
              
              {/* Versiones Tab Content */}
              <TabsContent value="versions">
                <motion.div
                  variants={containerVariants}
                  initial="hidden"
                  animate="visible"
                  className="space-y-6"
                >
                  {/* Version Information Card */}
                  <motion.div variants={itemVariants}>
                    <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                      <CardHeader>
                        <CardTitle className="flex items-center">
                          <Tag className="w-5 h-5 mr-2 text-blue-500" />
                          Información de Versión
                        </CardTitle>
                        <CardDescription>
                          Información sobre la versión actual y compatibilidad
                        </CardDescription>
                      </CardHeader>
                      
                      <CardContent className="space-y-6">
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                          <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                            <div className="text-sm text-gray-500 mb-1">Versión actual</div>
                            <div className="flex items-center">
                              <Tag className="h-4 w-4 mr-1.5 text-blue-500" />
                              <div className="font-semibold text-xl">
                                {selectedAgent.version || "1.0.0"}
                              </div>
                            </div>
                          </div>
                          
                          <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                            <div className="text-sm text-gray-500 mb-1">Publicado</div>
                            <div className="flex items-center">
                              <Calendar className="h-4 w-4 mr-1.5 text-green-500" />
                              <div className="font-semibold">
                                {selectedAgent.releaseDate ? new Date(selectedAgent.releaseDate).toLocaleDateString() : "N/A"}
                              </div>
                            </div>
                          </div>
                          
                          <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                            <div className="text-sm text-gray-500 mb-1">Última actualización</div>
                            <div className="flex items-center">
                              <Clock className="h-4 w-4 mr-1.5 text-amber-500" />
                              <div className="font-semibold">
                                {selectedAgent.lastUpdated ? new Date(selectedAgent.lastUpdated).toLocaleDateString() : "N/A"}
                              </div>
                            </div>
                          </div>
                          
                          <div className="bg-gray-50 p-4 rounded-lg border border-gray-200">
                            <div className="text-sm text-gray-500 mb-1">Compatibilidad con versiones</div>
                            <div className="flex items-center">
                              <RefreshCw className="h-4 w-4 mr-1.5 text-purple-500" />
                              <div className="font-semibold">
                                {selectedAgent.compatibleVersions?.length 
                                  ? selectedAgent.compatibleVersions.join(", ") 
                                  : "Solo versión actual"}
                              </div>
                            </div>
                          </div>
                        </div>
                        
                        {/* Changelog section */}
                        <div className="mt-8">
                          <h3 className="text-xl font-semibold mb-4 flex items-center">
                            <History className="w-5 h-5 mr-2 text-gray-700" />
                            Historial de Cambios
                          </h3>
                          
                          {selectedAgent.changelog && selectedAgent.changelog.length > 0 ? (
                            <div className="space-y-6">
                              {selectedAgent.changelog.map((entry, index) => (
                                <div key={index} className="relative pl-8 pb-8">
                                  {/* Timeline connector */}
                                  {index < (selectedAgent.changelog?.length || 1) - 1 && (
                                    <div className="absolute top-0 left-3 h-full w-0.5 bg-gray-200"></div>
                                  )}
                                  
                                  {/* Version marker */}
                                  <div className="absolute top-0 left-0 w-6 h-6 rounded-full bg-blue-100 border-2 border-blue-500 flex items-center justify-center text-blue-500 z-10">
                                    <Tag className="w-3 h-3" />
                                  </div>
                                  
                                  {/* Version content */}
                                  <div>
                                    <div className="flex items-center mb-2">
                                      <h4 className="text-lg font-semibold mr-2">Versión {entry.version}</h4>
                                      <Badge variant="outline" className="text-xs">
                                        {entry.date ? new Date(entry.date).toLocaleDateString() : "Sin fecha"}
                                      </Badge>
                                    </div>
                                    
                                    <ul className="space-y-1 text-gray-700">
                                      {entry.changes.map((change, changeIndex) => (
                                        <li key={changeIndex} className="flex items-start">
                                          <div className="text-green-500 mr-2 mt-1 flex-shrink-0">•</div>
                                          <span>{change}</span>
                                        </li>
                                      ))}
                                    </ul>
                                  </div>
                                </div>
                              ))}
                            </div>
                          ) : (
                            <div className="text-center py-8 bg-gray-50 rounded-lg border border-dashed border-gray-300">
                              <History className="h-12 w-12 text-gray-300 mx-auto mb-2" />
                              <p className="text-gray-500">No hay historial de cambios disponible para este agente</p>
                              <p className="text-gray-400 text-sm mt-1">Es la primera versión de este agente</p>
                            </div>
                          )}
                        </div>
                      </CardContent>
                    </Card>
                  </motion.div>
                </motion.div>
              </TabsContent>
                    {/* Performance Metrics */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <LineChart className="w-5 h-5 mr-2 text-blue-500" />
                            Performance Metrics
                          </CardTitle>
                          <CardDescription>
                            Key indicators of agent effectiveness
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-4">
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Conversion Rate Improvement</div>
                                <div className="text-green-600 font-semibold">+{selectedAgent.performance.conversionRate}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.conversionRate} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Average improvement in landing page conversion rates</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Engagement Score</div>
                                <div className="text-green-600 font-semibold">+{selectedAgent.performance.engagementScore}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.engagementScore} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Average increase in content engagement metrics</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Output Quality</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.outputQuality}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.outputQuality} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Quality rating based on human evaluators</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Creativity Score</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.creativity}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.creativity} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Originality and creative approach rating</div>
                            </div>
                            
                            <div className="space-y-1">
                              <div className="flex justify-between">
                                <div className="font-medium">Consistency Rating</div>
                                <div className="text-green-600 font-semibold">{selectedAgent.performance.consistency}%</div>
                              </div>
                              <Progress value={selectedAgent.performance.consistency} className="h-2" indicatorClassName="bg-gradient-to-r from-blue-500 to-indigo-600" />
                              <div className="text-xs text-gray-500">Consistency across multiple content pieces</div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Benchmark Comparison */}
                    <motion.div variants={itemVariants}>
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)]">
                        <CardHeader>
                          <CardTitle className="flex items-center">
                            <TrendingUp className="w-5 h-5 mr-2 text-green-500" />
                            Benchmarking
                          </CardTitle>
                          <CardDescription>
                            How this agent compares to alternatives
                          </CardDescription>
                        </CardHeader>
                        
                        <CardContent>
                          <div className="space-y-6">
                            <div className="p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100">
                              <div className="font-semibold text-blue-800 mb-1">Human vs AI Copywriter Comparison</div>
                              <div className="space-y-3 mt-3">
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Speed</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: 1x</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 50x faster</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Cost Efficiency</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: 1x</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 85% less</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Consistency</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">Human: Variable</Badge>
                                    <Badge className="bg-gradient-to-r from-blue-500 to-indigo-600">AI: 96% consistent</Badge>
                                  </div>
                                </div>
                                
                                <div className="flex justify-between items-center">
                                  <div className="text-sm">Creativity</div>
                                  <div className="flex items-center space-x-1">
                                    <Badge className="bg-gradient-to-r from-purple-500 to-pink-600">Human: Still leads</Badge>
                                    <Badge variant="outline" className="bg-blue-100 border-blue-200 text-blue-700">AI: 95% as creative</Badge>
                                  </div>
                                </div>
                              </div>
                            </div>
                            
                            <div className="p-4 border border-gray-200 rounded-lg">
                              <div className="font-semibold mb-2">AI Agent Version History</div>
                              <div className="space-y-3">
                                <div className="flex justify-between items-center text-sm">
                                  <div className="flex items-center">
                                    <Badge variant="outline" className="mr-2 bg-green-100 text-green-700 border-green-200">Current</Badge>
                                    <span>Version 3.5</span>
                                  </div>
                                  <div className="text-gray-500">Released 2 weeks ago</div>
                                </div>
                                
                                <div className="flex justify-between items-center text-sm">
                                  <div>Version 3.0</div>
                                  <div className="text-gray-500">Released 3 months ago</div>
                                </div>
                                
                                <div className="flex justify-between items-center text-sm">
                                  <div>Version 2.5</div>
                                  <div className="text-gray-500">Released 6 months ago</div>
                                </div>
                              </div>
                              
                              <div className="mt-4 pt-3 border-t border-gray-200">
                                <div className="text-sm font-medium mb-1">Recent Improvements</div>
                                <ul className="text-xs text-gray-600 space-y-1">
                                  <li>• Enhanced understanding of brand voice</li>
                                  <li>• Improved headline generation capabilities</li>
                                  <li>• Better optimization for different platforms</li>
                                  <li>• Advanced emotional intelligence in writing</li>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                    
                    {/* Call to Action */}
                    <motion.div variants={itemVariants} className="lg:col-span-2">
                      <Card className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)] overflow-hidden">
                        <div className="h-2 bg-gradient-to-r from-blue-500 to-indigo-600"></div>
                        <CardContent className="pt-6 pb-6">
                          <div className="flex flex-col md:flex-row justify-between items-center">
                            <div className="mb-4 md:mb-0">
                              <h3 className="text-xl font-bold mb-2">Ready to supercharge your marketing?</h3>
                              <p className="text-gray-600">
                                Add {selectedAgent.name} to your team and start creating compelling content today.
                              </p>
                            </div>
                            
                            <div className="flex flex-col sm:flex-row gap-3">
                              <Button
                                className="border-2 border-black bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] transform hover:-translate-y-0.5 hover:-translate-x-0.5 transition-all text-white"
                                onClick={handleAddToTeam}
                              >
                                <div className="flex items-center">
                                  <PlusCircle className="w-4 h-4 mr-1.5" />
                                  <span>Add to Team</span>
                                </div>
                              </Button>
                              
                              <Button
                                variant="outline"
                                className="border-2 border-black shadow-[3px_3px_0px_0px_rgba(0,0,0,0.8)] hover:shadow-[4px_4px_0px_0px_rgba(0,0,0,0.8)] transform hover:-translate-y-0.5 hover:-translate-x-0.5 transition-all bg-white"
                                onClick={handleTryDemo}
                              >
                                <div className="flex items-center">
                                  <Sparkles className="w-4 h-4 mr-1.5" />
                                  <span>Try Demo</span>
                                </div>
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    </motion.div>
                  </div>
                </motion.div>
              </TabsContent>
            </Tabs>
            
            {/* Related Agents Section */}
            <div className="mb-8">
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white">Related Agents</h2>
                <Button 
                  variant="link" 
                  className="font-medium flex items-center text-blue-600 dark:text-blue-400"
                  onClick={() => setLocation('/agent-marketplace')}
                >
                  View All <ChevronRight className="h-4 w-4" />
                </Button>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-5">
                {selectedAgent.compatibleAgents.map((agent: { id: string; name: string; avatar: string; color: string; compatibility: number }) => (
                  <Card key={agent.id} className="border-3 border-black shadow-[5px_5px_0px_0px_rgba(0,0,0,0.8)] overflow-hidden cursor-pointer" onClick={() => setLocation(`/agent-marketplace/${agent.id}`)}>
                    <div className="h-2 bg-gradient-to-r from-gray-500 to-gray-600"></div>
                    <CardHeader className="pb-2">
                      <div className="flex justify-between items-start">
                        <div className="flex items-center space-x-3">
                          <div className={`p-3 rounded-xl ${agent.color} text-white border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]`}>
                            <span className="text-xl">{agent.avatar}</span>
                          </div>
                          <div>
                            <CardTitle className="text-lg">{agent.name}</CardTitle>
                            <div className="flex items-center mt-1">
                              <span className="text-xs text-green-600 font-medium">{agent.compatibility}% Compatible</span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </CardHeader>
                    <CardFooter className="pt-0">
                      <Button variant="outline" className="w-full text-sm border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,0.8)]">
                        View Details
                      </Button>
                    </CardFooter>
                  </Card>
                ))}
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}